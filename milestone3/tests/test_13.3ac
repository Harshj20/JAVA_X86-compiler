test_13.fib:
	push	%rbp
	%rbp = %rsp
	t0 = [%rbp+24] <= 1
	if t0 goto L-1
	goto L-2
L-1:
	%rax = [%rbp+24]
	%rsp = %rbp
	popq	%rbp
	ret
L-2:
#MakingFunctionCall
	t1 = [%rbp+24] -int 1
	push t1
	push [%rbp+16]
	call test_13.fib
	%rsp = %rsp + 16
	t2 = %rax
#MakingFunctionCall
	t3 = [%rbp+24] -int 2
	push t3
	push [%rbp+16]
	call test_13.fib
	%rsp = %rsp + 16
	t4 = %rax
	t5 = t2 +int t4
	%rax = t5
	%rsp = %rbp
	popq	%rbp
	ret

main:
	push %rbp
	%rbp = %rsp
	t6 = 0
	t7 = allocate t6
#MakingFunctionCall
	push t7
	call main.2
	%rsp = %rsp + 8
	%rsp = %rbp
	pop %rbp
	ret

main.2:
	push	%rbp
	%rbp = %rsp
	push 0
	[%rbp-8] = 9
#MakingFunctionCall
	push [%rbp-8]
	push [%rbp+16]
	call test_13.fib
	%rsp = %rsp + 16
	t0 = %rax
	[%rbp-8] = t0
#MakingFunctionCall
	push [%rbp-8]
	push 0
	call System.println
	%rsp = %rsp + 16
	%rsp = %rbp
	popq	%rbp
	ret

test_13.ctor:
	push	%rbp
	%rbp = %rsp
	%rax = [%rbp+16]
	%rsp = %rbp
	popq	%rbp
	ret
